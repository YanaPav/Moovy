{"version":3,"file":"static/js/269.a22fa103.chunk.js","mappings":"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","sources":["components/MovieDetailsCard/MovieDetailsCard.jsx","Pages/MovieDetailsPage/MovieDetailsPage.jsx","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Container, Rating, Box } from '@mui/material';\nimport { useGetMovieByIdQuery } from 'redux/slices/getMovieDetailsSlice';\nimport { addRatedMovie, removeRatedMovie } from 'redux/slices/ratedMoviesSlice';\nimport noPoster from 'images/noPoster.jpg';\n\nexport const MovieDetailsCard = () => {\n  const { movieId } = useParams();\n  const { data } = useGetMovieByIdQuery(movieId);\n  const ratedMovies = useSelector(state => state.ratedMovies);\n  const [rating, setRating] = useState(isAlredyRated() ?? 0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (rating !== null && rating !== 0) {\n      dispatch(addRatedMovie({ ...data, rating: rating }));\n      return;\n    }\n    if (rating === null) {\n      dispatch(removeRatedMovie(data.imdbID));\n    }\n  }, [data, dispatch, rating]);\n\n  function isAlredyRated() {\n    let startRating = null;\n    const alredyRatedMovie = ratedMovies.find(\n      movie => movie.imdbID === movieId\n    );\n\n    if (alredyRatedMovie) {\n      startRating = alredyRatedMovie.rating;\n    }\n    return startRating;\n  }\n\n  return (\n    <Container\n      maxWidth=\"lg\"\n      sx={{\n        mt: 2,\n        display: 'flex',\n        alignItems: 'start',\n        gap: 4,\n      }}\n    >\n      <img\n        src={data.Poster === 'N/A' ? noPoster : data.Poster}\n        alt={data.Title}\n      />\n      <div>\n        <h2 style={{ marginTop: 0 }}>\n          {data.Title} ({data.Year})\n        </h2>\n        <p>\n          <b>Genre:</b> {data.Genre}\n        </p>\n        <p>\n          <b>Director:</b> {data.Director}\n        </p>\n        <p>\n          <b>Actors:</b> {data.Actors !== 'N/A' && data.Actors}\n        </p>\n        <p>\n          <b>Country:</b> {data.Country}\n        </p>\n        {data.imdbRating !== 'N/A' && (\n          <p>\n            <b>imdbRating:&nbsp;</b>\n            {data.imdbRating}\n          </p>\n        )}\n\n        {data.Plot !== 'N/A' && <p>{data.Plot}</p>}\n\n        <Box\n          component=\"div\"\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '10px',\n            padding: '4px 0',\n          }}\n        >\n          <b>My rating:</b>\n          <Rating\n            name=\"simple-controlled\"\n            value={rating}\n            onChange={(_, newValue) => setRating(newValue)}\n          />\n        </Box>\n      </div>\n    </Container>\n  );\n};\n","import { useParams, useNavigate } from 'react-router-dom';\nimport { LinearProgress, Button, Container } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useGetMovieByIdQuery } from 'redux/slices/getMovieDetailsSlice';\nimport { MovieDetailsCard } from 'components/MovieDetailsCard/MovieDetailsCard';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { data, error, isLoading } = useGetMovieByIdQuery(movieId);\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" sx={{ mt: 10 }}>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          startIcon={<ArrowBackIcon />}\n          type=\"button\"\n          onClick={() => navigate(-1)}\n          sx={{ height: '40px', marginRight: 'auto' }}\n        >\n          Go back\n        </Button>\n      </Container>\n\n      {isLoading && <LinearProgress sx={{ marginTop: '14px' }} />}\n\n      {error && (\n        <Container maxWidth=\"lg\" sx={{ textAlign: 'center' }}>\n          <p>Something goes wrong :( Try again later.</p>\n          {/* Real error {error.data.Error} */}\n        </Container>\n      )}\n\n      {data?.Error && (\n        <Container maxWidth=\"lg\" sx={{ textAlign: 'center' }}>\n          <p>{data.Error}</p>\n        </Container>\n      )}\n\n      {data && !data.Error && <MovieDetailsCard />}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;"],"names":["MovieDetailsCard","movieId","useParams","data","useGetMovieByIdQuery","ratedMovies","useSelector","state","useState","startRating","alredyRatedMovie","find","movie","imdbID","rating","isAlredyRated","setRating","dispatch","useDispatch","useEffect","removeRatedMovie","addRatedMovie","Container","maxWidth","sx","mt","display","alignItems","gap","src","Poster","noPoster","alt","Title","style","marginTop","Year","Genre","Director","Actors","Country","imdbRating","Plot","Box","component","padding","Rating","name","value","onChange","_","newValue","error","isLoading","navigate","useNavigate","Button","variant","size","startIcon","ArrowBack","type","onClick","height","marginRight","LinearProgress","textAlign","Error","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
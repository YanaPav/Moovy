{"version":3,"file":"static/js/798.c06fcb5e.chunk.js","mappings":"sNAGaA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,yC,SCKTE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,CACEM,QAAQ,YACRC,KAAK,QACLC,WAAW,SAACC,EAAA,EAAD,IACXC,KAAK,SACLC,QAAS,kBAAMP,GAAU,EAAhB,EALX,oBAUH,C,iMCpBYQ,EAAaX,EAAAA,EAAAA,IAAH,mGAOVY,EAAmBZ,EAAAA,EAAAA,IAAH,oG,SCMhBa,EAAmB,WAAO,IAAD,EAC5BC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAASC,EAAAA,EAAAA,GAAqBH,GAA9BE,KACFE,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,GAChC,GAA4BC,EAAAA,EAAAA,UAAQ,UAapC,WACE,IAAIC,EAAc,KACZC,EAAmBL,EAAYM,MACnC,SAAAC,GAAK,OAAIA,EAAMC,SAAWZ,CAArB,IAGHS,IACFD,EAAcC,EAAiBI,QAEjC,OAAOL,CACR,CAvBoCM,UAAD,QAAoB,GAAxD,eAAOD,EAAP,KAAeE,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACO,OAAXL,GAA8B,IAAXA,EAIR,OAAXA,GACFG,GAASG,EAAAA,EAAAA,IAAiBjB,EAAKU,SAJ/BI,GAASI,EAAAA,EAAAA,KAAc,kBAAKlB,GAAN,IAAYW,OAAQA,KAM7C,GAAE,CAACX,EAAMc,EAAUH,KAelB,UAACf,EAAD,YACE,gBACEuB,IAAqB,QAAhBnB,EAAKoB,OAAmBC,EAAWrB,EAAKoB,OAC7CE,IAAKtB,EAAKuB,SAEZ,4BACE,gBAAIC,MAAO,CAAEC,UAAW,GAAxB,UACGzB,EAAKuB,MADR,KACiBvB,EAAK0B,KADtB,QAGA,0BACE,kCADF,IACiB1B,EAAK2B,UAEtB,0BACE,qCADF,IACoB3B,EAAK4B,aAEzB,0BACE,mCADF,IACkC,QAAhB5B,EAAK6B,QAAoB7B,EAAK6B,WAEhD,0BACE,oCADF,IACmB7B,EAAK8B,WAEH,QAApB9B,EAAK+B,aACJ,0BACE,2CACC/B,EAAK+B,cAIK,QAAd/B,EAAKgC,OAAkB,uBAAIhC,EAAKgC,QAEjC,UAACrC,EAAD,YACE,uCACA,SAACsC,EAAA,EAAD,CACEC,KAAK,oBACLC,MAAOxB,EACPyB,SAAU,SAACC,EAAGC,GAAJ,OAAiBzB,EAAUyB,EAA3B,YAMrB,E,mBCzDD,EAnByB,WACvB,IAAQxC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmCG,EAAAA,EAAAA,GAAqBH,GAAhDE,EAAR,EAAQA,KAAMuC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,UAErB,OACE,iCACE,SAACtD,EAAA,EAAD,IAECsD,IAAa,SAAC,IAAD,IAEbD,IAAS,qEAEL,OAAJvC,QAAI,IAAJA,OAAA,EAAAA,EAAMyC,SAAS,uBAAIzC,EAAKyC,QAExBzC,IAASA,EAAKyC,QAAS,SAAC5C,EAAD,MAG7B,C,2BCzBG6C,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iEACD,aAEJN,EAAQ,EAAUG,C","sources":["components/GoBackBtn/GoBackBtn.styled.jsx","components/GoBackBtn/GoBackBtn.jsx","components/MovieDetailsCard/MovieDetailsCard.styled.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\n\nexport const StyledBtn = styled(Button)`\n  height: 40px;\n`;\n","// react\nimport { useNavigate } from 'react-router-dom';\n// libraries\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n// components\nimport { StyledBtn } from './GoBackBtn.styled';\n\n//\nexport const GoBackBtn = () => {\n  const navigate = useNavigate();\n\n  return (\n    <StyledBtn\n      variant=\"contained\"\n      size=\"small\"\n      startIcon={<ArrowBackIcon />}\n      type=\"button\"\n      onClick={() => navigate(-1)}\n    >\n      Go back\n    </StyledBtn>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const RatingWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 4px 0;\n`;\n\nexport const MovieDetailsWrap = styled.div`\n  margin-top: 10px;\n  display: flex;\n  align-items: start;\n  gap: 20px;\n`;\n","// react\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n// libraries\nimport { Rating } from '@mui/material';\n// redux-components\nimport { useGetMovieByIdQuery } from 'redux/slices/getMovieDetailsSlice';\nimport { selectRatedMovies } from 'redux/selectors';\nimport { addRatedMovie, removeRatedMovie } from 'redux/slices/ratedMoviesSlice';\n// components\nimport noPoster from 'images/noPoster.jpg';\nimport { RatingWrap, MovieDetailsWrap } from './MovieDetailsCard.styled';\n\n//\nexport const MovieDetailsCard = () => {\n  const { movieId } = useParams();\n  const { data } = useGetMovieByIdQuery(movieId);\n  const ratedMovies = useSelector(selectRatedMovies);\n  const [rating, setRating] = useState(isAlredyRated() ?? 0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (rating !== null && rating !== 0) {\n      dispatch(addRatedMovie({ ...data, rating: rating }));\n      return;\n    }\n    if (rating === null) {\n      dispatch(removeRatedMovie(data.imdbID));\n    }\n  }, [data, dispatch, rating]);\n\n  function isAlredyRated() {\n    let startRating = null;\n    const alredyRatedMovie = ratedMovies.find(\n      movie => movie.imdbID === movieId\n    );\n\n    if (alredyRatedMovie) {\n      startRating = alredyRatedMovie.rating;\n    }\n    return startRating;\n  }\n\n  return (\n    <MovieDetailsWrap>\n      <img\n        src={data.Poster === 'N/A' ? noPoster : data.Poster}\n        alt={data.Title}\n      />\n      <div>\n        <h2 style={{ marginTop: 0 }}>\n          {data.Title} ({data.Year})\n        </h2>\n        <p>\n          <b>Genre:</b> {data.Genre}\n        </p>\n        <p>\n          <b>Director:</b> {data.Director}\n        </p>\n        <p>\n          <b>Actors:</b> {data.Actors !== 'N/A' && data.Actors}\n        </p>\n        <p>\n          <b>Country:</b> {data.Country}\n        </p>\n        {data.imdbRating !== 'N/A' && (\n          <p>\n            <b>imdbRating:&nbsp;</b>\n            {data.imdbRating}\n          </p>\n        )}\n\n        {data.Plot !== 'N/A' && <p>{data.Plot}</p>}\n\n        <RatingWrap>\n          <b>My rating:</b>\n          <Rating\n            name=\"simple-controlled\"\n            value={rating}\n            onChange={(_, newValue) => setRating(newValue)}\n          />\n        </RatingWrap>\n      </div>\n    </MovieDetailsWrap>\n  );\n};\n","// react\nimport { useParams } from 'react-router-dom';\n// redux-components\nimport { useGetMovieByIdQuery } from 'redux/slices/getMovieDetailsSlice';\n// components\nimport { MovieDetailsCard } from 'components/MovieDetailsCard/MovieDetailsCard';\nimport { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport { Loader } from 'components/Loader/Loader.styled';\n\n//\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { data, error, isLoading } = useGetMovieByIdQuery(movieId);\n\n  return (\n    <>\n      <GoBackBtn />\n\n      {isLoading && <Loader />}\n\n      {error && <p>Something goes wrong :( Try again later.</p>}\n\n      {data?.Error && <p>{data.Error}</p>}\n\n      {data && !data.Error && <MovieDetailsCard />}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;"],"names":["StyledBtn","styled","Button","GoBackBtn","navigate","useNavigate","variant","size","startIcon","ArrowBack","type","onClick","RatingWrap","MovieDetailsWrap","MovieDetailsCard","movieId","useParams","data","useGetMovieByIdQuery","ratedMovies","useSelector","selectRatedMovies","useState","startRating","alredyRatedMovie","find","movie","imdbID","rating","isAlredyRated","setRating","dispatch","useDispatch","useEffect","removeRatedMovie","addRatedMovie","src","Poster","noPoster","alt","Title","style","marginTop","Year","Genre","Director","Actors","Country","imdbRating","Plot","Rating","name","value","onChange","_","newValue","error","isLoading","Error","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
{"version":3,"file":"static/js/427.715a8f87.chunk.js","mappings":"uSAGaA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnC,OACE,SAAC,IAAD,CACEC,GAAG,iBACHC,MAAM,uBACNC,KAAK,SACLC,QAAQ,WACRC,KAAK,QACLC,GAAI,CAAEC,WAAY,QAClBR,MAAOA,EACPC,SAAUA,GAGf,E,UCbYQ,EAAgB,WAC3B,OACE,UAACC,EAAA,EAAD,CACEC,SAAS,KACTJ,GAAI,CACFK,UAAW,UAHf,WAME,4DACA,gBAAKC,IAAKC,EAAgBC,IAAI,UAAUC,MAAM,UAGnD,ECiED,EAvEwB,WACtB,IAAMC,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,WAAV,IAC/BG,EAAgBH,EAAYI,OAAS,EAC3C,GAAgDC,EAAAA,EAAAA,UAAS,IAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACMC,GAAWC,EAAAA,EAAAA,MAMXC,EAAgBV,EAAYW,QAAO,gBAAGC,EAAH,EAAGA,MAAH,cACvCA,QADuC,IACvCA,OADuC,EACvCA,EAAOC,cAAcC,SAASR,EAAiBO,cADR,IAIzC,OACE,UAACpB,EAAA,EAAD,CAAWC,SAAS,KAAKJ,GAAI,CAAEyB,GAAI,GAAIpB,UAAW,UAAlD,WACE,SAACqB,EAAA,EAAD,CACE5B,QAAQ,YACRC,KAAK,QACL4B,WAAW,SAACC,EAAA,EAAD,IACXC,KAAK,SACLC,QAAS,kBAAMZ,GAAU,EAAhB,EACTlB,GAAI,CAAE+B,OAAQ,OAAQC,YAAa,QANrC,sBAWEnB,IAAiB,SAACX,EAAD,IAElBW,IACC,iCACE,SAACrB,EAAD,CACEC,MAAOuB,EACPtB,SA3BkB,SAAAuC,GAC1BhB,EAAoBgB,EAAEC,cAAczC,MACrC,IA4BiC,IAAzB2B,EAAcN,SACb,wDAAgCE,EAAhC,cAGF,SAACmB,EAAA,EAAD,CACEC,UAAU,KACVpC,GAAI,CACFqC,QAAS,OACTC,SAAU,OACVC,IAAK,OACLC,eAAgB,SAChBC,QAAS,GAPb,SAUGrB,EAAcsB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,OAAQxB,EAAhC,EAAgCA,MAAhC,OACjB,SAACyB,EAAA,GAAD,CAEE/C,GAAI,CAAEyC,QAAS,IAAKhC,MAAO,QAASsB,OAAQ,SAF9C,UAIE,SAACiB,EAAA,EAAD,CACEC,OAAQN,EACRO,KAAML,EACNM,MAAOP,EACPjD,GAAImD,EACJM,MAAO9B,KARJwB,EAFU,WAmB9B,C,2BC5EGO,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iEACD,aAEJN,EAAQ,EAAUG,C","sources":["components/GenreFilter/GenreFilter.jsx","components/NoRatedMovies/NoRatedMovies.jsx","Pages/RatedMoviesPage/RatedMoviesPage.jsx","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import { StyledTextField } from '../SearchForm/SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nexport const GenreFilter = ({ value, onChange }) => {\n  return (\n    <StyledTextField\n      id=\"outlined-basic\"\n      label=\"Find movies by genre\"\n      name=\"filter\"\n      variant=\"outlined\"\n      size=\"small\"\n      sx={{ marginLeft: '10px' }}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nGenreFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import { Container } from '@mui/material';\nimport noMoviesPoster from '../../images/noMoviesPoster.png';\n\nexport const NoRatedMovies = () => {\n  return (\n    <Container\n      maxWidth=\"lg\"\n      sx={{\n        textAlign: 'center',\n      }}\n    >\n      <p>You have no rated movies yet :(</p>\n      <img src={noMoviesPoster} alt=\"popcorn\" width=\"500\" />\n    </Container>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Container, ListItem, Button } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\nimport { GenreFilter } from '../../components/GenreFilter/GenreFilter';\nimport { NoRatedMovies } from '../../components/NoRatedMovies/NoRatedMovies';\n\nconst RatedMoviesPage = () => {\n  const ratedMovies = useSelector(state => state.ratedMovies);\n  const isRatedMovies = ratedMovies.length > 0;\n  const [genreFilterValue, setGenreFilterValue] = useState('');\n  const navigate = useNavigate();\n\n  const handlerFilterChange = e => {\n    setGenreFilterValue(e.currentTarget.value);\n  };\n\n  const filtredMovies = ratedMovies.filter(({ Genre }) =>\n    Genre?.toLowerCase().includes(genreFilterValue.toLowerCase())\n  );\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 10, textAlign: 'center' }}>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<ArrowBackIcon />}\n        type=\"button\"\n        onClick={() => navigate(-1)}\n        sx={{ height: '40px', marginRight: 'auto' }}\n      >\n        Go back\n      </Button>\n\n      {!isRatedMovies && <NoRatedMovies />}\n\n      {isRatedMovies && (\n        <>\n          <GenreFilter\n            value={genreFilterValue}\n            onChange={handlerFilterChange}\n          />\n\n          {filtredMovies.length === 0 && (\n            <p>There are no movies in the \"{genreFilterValue}\" genre</p>\n          )}\n\n          <Box\n            component=\"ul\"\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '16px',\n              justifyContent: 'center',\n              padding: 0,\n            }}\n          >\n            {filtredMovies.map(({ Poster, Title, Year, imdbID, Genre }) => (\n              <ListItem\n                key={imdbID}\n                sx={{ padding: '0', width: '350px', height: '650px' }}\n              >\n                <MovieCard\n                  poster={Poster}\n                  year={Year}\n                  title={Title}\n                  id={imdbID}\n                  genre={Genre}\n                />\n              </ListItem>\n            ))}\n          </Box>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default RatedMoviesPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;"],"names":["GenreFilter","value","onChange","id","label","name","variant","size","sx","marginLeft","NoRatedMovies","Container","maxWidth","textAlign","src","noMoviesPoster","alt","width","ratedMovies","useSelector","state","isRatedMovies","length","useState","genreFilterValue","setGenreFilterValue","navigate","useNavigate","filtredMovies","filter","Genre","toLowerCase","includes","mt","Button","startIcon","ArrowBack","type","onClick","height","marginRight","e","currentTarget","Box","component","display","flexWrap","gap","justifyContent","padding","map","Poster","Title","Year","imdbID","ListItem","MovieCard","poster","year","title","genre","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}